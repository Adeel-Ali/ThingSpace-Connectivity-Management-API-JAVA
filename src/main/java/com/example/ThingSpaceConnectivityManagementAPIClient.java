/*
 * ThingSpaceConnectivityManagementAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/05/2016
 */
package com.example;

import com.example.controllers.*;
import com.example.http.client.HttpClient;

public class ThingSpaceConnectivityManagementAPIClient {
    /**
     * Singleton access to Sms controller
     * @return	Returns the SmsController instance 
     */
    public SmsController getSms() {
        return SmsController.getInstance();
    }

    /**
     * Singleton access to Session controller
     * @return	Returns the SessionController instance 
     */
    public SessionController getSession() {
        return SessionController.getInstance();
    }

    /**
     * Singleton access to Plans controller
     * @return	Returns the PlansController instance 
     */
    public PlansController getPlans() {
        return PlansController.getInstance();
    }

    /**
     * Singleton access to Leads controller
     * @return	Returns the LeadsController instance 
     */
    public LeadsController getLeads() {
        return LeadsController.getInstance();
    }

    /**
     * Singleton access to Groups controller
     * @return	Returns the GroupsController instance 
     */
    public GroupsController getGroups() {
        return GroupsController.getInstance();
    }

    /**
     * Singleton access to Devices controller
     * @return	Returns the DevicesController instance 
     */
    public DevicesController getDevices() {
        return DevicesController.getInstance();
    }

    /**
     * Singleton access to Callbacks controller
     * @return	Returns the CallbacksController instance 
     */
    public CallbacksController getCallbacks() {
        return CallbacksController.getInstance();
    }

    /**
     * Get the shared http client currently being used for API calls
     * @return The http client instance currently being used
     */
    public HttpClient getSharedHttpClient() {
        return BaseController.getClientInstance();
    }
    
    /**
     * Set a shared http client to be used for API calls
     * @param httpClient The http client to use
     */
    public void setSharedHttpClient(HttpClient httpClient) {
        BaseController.setClientInstance(httpClient);
    }

    /**
     * Default constructor 
     */     
    public ThingSpaceConnectivityManagementAPIClient() {	
	}

    /**
     * Client initialization constructor 
     */     
    public ThingSpaceConnectivityManagementAPIClient(String apiKey) {
        this();
        Configuration.apiKey = apiKey;
    }
}